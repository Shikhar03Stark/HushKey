apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: hushkey-kv
  namespace: hushkey-ns
spec:
  provider: azure
  parameters:
    usePodIdentity: "false"
    clientID: "__UAMI_CLIENTID__"
    keyvaultName: hushkey-kv
    tenantId: __TENANTID__
    objects: |
      array:
        - |
          objectName: "POSTGRES-USER"
          objectType: secret
        - |
          objectName: "POSTGRES-PASSWORD"
          objectType: secret
        - |
          objectName: "POSTGRES-HOST"
          objectType: secret
        - |
          objectName: "POSTGRES-PORT"
          objectType: secret
        - |
          objectName: "POSTGRES-DB"
          objectType: secret
  secretObjects:
    - secretName: db-secret
      type: Opaque
      data:
        - objectName: "POSTGRES-USER"
          key: POSTGRES_USER
        - objectName: "POSTGRES-PASSWORD"
          key: POSTGRES_PASSWORD
        - objectName: "POSTGRES-HOST"
          key: POSTGRES_HOST
        - objectName: "POSTGRES-PORT"
          key: POSTGRES_PORT
        - objectName: "POSTGRES-DB"
          key: POSTGRES_DB
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hushkey-api-deployment
  namespace: hushkey-ns
  labels:
    app: hushkey-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: hushkey-api
  template:
    metadata:
      labels:
        app: hushkey-api
    spec:
      serviceAccountName: hushkeykv-sa
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "hushkey-kv"
      containers:
        - name: hushkey-api
          image: ghcr.io/shikhar03stark/hushkeyapi:__IMAGE_TAG__
          ports:
            - containerPort: 8080
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: "Production"
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_HOST
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_PORT
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_DB
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: secrets-store-inline
              mountPath: "/mnt/secrets-store"
              readOnly: true
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
---
apiVersion: v1
kind: Service
metadata:
  name: hushkey-api
  namespace: hushkey-ns
spec:
  type: ClusterIP
  selector:
    app: hushkey-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingress-nginx
  template:
    metadata:
      labels:
        app: ingress-nginx
    spec:
      containers:
        - name: controller
          image: registry.k8s.io/ingress-nginx/controller:v1.10.1
          args:
            - /nginx-ingress-controller
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
          securityContext:
            runAsUser: 101
            runAsGroup: 101
---
apiVersion: v1
kind: Service
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
  annotations:
    service.beta.kubernetes.io/azure-pip-name: "hushkey-public-ip"
spec:
  type: LoadBalancer
  loadBalancerIP: 20.33.90.38
  selector:
    app: ingress-nginx
  ports:
    - name: http
      port: 80
      targetPort: 80
    - name: https
      port: 443
      targetPort: 443
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hushkey-ingress
  namespace: hushkey-ns
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  ingressClassName: nginx
  rules:
    - host: hushkeyapi.devitvish.in
      http:
        paths:
          - path: /api(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: hushkey-api
                port:
                  number: 80
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hushkeykv-sa
  namespace: hushkey-ns
  annotations:
    azure.workload.identity/client-id: "__UAMI_CLIENTID__"
